// Mocks generated by Mockito 5.4.4 from annotations
// in simple_news_client/test/framework/repository_implementation/article_repository_implementation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:simple_news_client/core/data/data_sources/local_article_data_source.dart'
    as _i5;
import 'package:simple_news_client/core/data/data_sources/remote_article_data_source.dart'
    as _i2;
import 'package:simple_news_client/core/domain/article.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RemoteArticleDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteArticleDataSource extends _i1.Mock
    implements _i2.RemoteArticleDataSource {
  @override
  _i3.Future<List<_i4.Article>> getTopArticles(String? sourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopArticles,
          [sourceId],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<List<_i4.Article>> searchArticles(
    String? sourceId,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchArticles,
          [
            sourceId,
            keyword,
          ],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);
}

/// A class which mocks [LocalArticleDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalArticleDataSource extends _i1.Mock
    implements _i5.LocalArticleDataSource {
  @override
  _i3.Future<List<_i4.Article>> getSavedArticles() => (super.noSuchMethod(
        Invocation.method(
          #getSavedArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<void> saveArticle(_i4.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #saveArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeArticle(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeArticle,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
